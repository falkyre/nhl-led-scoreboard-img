name: Create Release - Image

on:
  push:
    tags:
    - 'v*'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Get the version (git tag)
      id: get_version
      run: |
        echo ${GITHUB_REF/refs\/tags\//}
        echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: Install Dependencies
      run: |
       sudo dpkg --add-architecture i386
       sudo apt-get update
       sudo apt-get install -y coreutils quilt parted debootstrap zerofree zip dosfstools libarchive-tools libcap2-bin grep rsync xz-utils file git curl jq
       sudo apt-get install -y qemu-user-static
    - name: Build Image
      run: sudo CLEAN=1 BUILD_VERSION=${{ steps.get_version.outputs.VERSION }} ./build.sh -c config
    - name: Calculate Checksum
      id: get_sha256_checksum
      run: |
        export IMAGE_SHA256_CHECKSUM=$(shasum -a 256 deploy/image_rpios-scoreboard.zip | awk '{print $1}')
        echo "$IMAGE_SHA256_CHECKSUM deploy/image_rpios-scoreboard.zip"
        echo ::set-output name=IMAGE_SHA256_CHECKSUM::${IMAGE_SHA256_CHECKSUM}
    - name: Name asset
      id: name_asset
      run: |
        cp deploy/image_rpios-scoreboard.zip rpios-scoreboard-${{ steps.get_version.outputs.VERSION }}.zip
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        files: |
          rpios-scoreboard-${{ steps.get_version.outputs.VERSION }}.zip

    - uses: sarisia/actions-status-discord@v1
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        nodetail: true
        title: New version of `NHL LED Scoreboard image` is ready!
        description: |
          Version `${{ steps.get_version.outputs.VERSION }}`
          Click [here](https://github.com/falkyre/nhl-led-scoreboard-img/releases/latest) to download!
    # - name: Upload Image
    #   id: upload-release-asset 
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: deploy/image_rpios-scoreboard.zip
    #     asset_name: rpios-scoreboard-${{ steps.get_version.outputs.VERSION }}.zip
    #     asset_content_type: application/zip
