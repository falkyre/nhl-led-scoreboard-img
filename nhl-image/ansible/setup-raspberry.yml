-
  name: Setup RPi - Scoreboard setup
  hosts: all
  become: true
  become_user: pi
  vars:
    gh_repo: "https://github.com/riffnshred/nhl-led-scoreboard.git"
    use_beta: false
    gh_branch: "beta"
    system_hostname: scoreboard
    apt_proxy: "http://192.168.100.99:3142"
    use_apt_proxy: true
    pypi_proxy: "--index-url=http://192.168.100.99:5000/index/ --trusted-host 192.168.100.99"

  # roles:
  #   - { role: chzerv.log2ram, become_user: root}
  roles:
    - { role: geerlingguy.pip, become_user: root }
    - role: geerlingguy.supervisor
      become_user: root
      vars:
        supervisor_started: false
        supervisor_enabled: false
        supervisor_programs:
          - name: 'scoreboard'
            command: /home/pi/nhl-led-scoreboard/venv/bin/python3 ./src/main.py --led-gpio-mapping=adafruit-hat-pwm --led-slowdown-gpio=2 --led-rows=32 --led-cols=64 --updatecheck
            state: present
            configuration: |
              directory=/home/pi/nhl-led-scoreboard
              autostart=true
              autorestart=true
              stderr_logfile=/var/log/scoreboard.stderr.log
              stderr_logfile_maxbytes=1MB
              stderr_logfile_backups=10
              stdout_logfile=/var/log/scoreboard.stdout.log
              stdout_logfile_maxbytes=1MB
              stdout_logfile_backups=10
             

  tasks:
    # use only become_user: root if task should be run as superuser
    - name: Copy scoreboard supervisord.conf
      become_user: root
      ansible.builtin.copy:
         src: ./files/sb_image/supervisord.conf
         dest: /etc/supervisor/
         backup: true
         mode: preserve

    # - meta: end_play

    - name: Setup apt proxy
      become_user: root
      ansible.builtin.copy:
        src: ./files/sb_image/51cache
        dest: /etc/apt/apt.conf.d/
        mode: "0644"
      when: use_apt_proxy
    
    - name: Update apt proxy in 51cache file
      become_user: root
      ansible.builtin.replace:
        path: /etc/apt/apt.conf.d/51cache
        regexp: 'APT_PROXY'
        replace: "{{ apt_proxy }}"
      when: use_apt_proxy

    - name: Upgrade all apt packages
      become_user: root
      ansible.builtin.apt: 
        name: "*" 
        state: latest 
        update_cache: yes 
        force_apt_get: yes

    - name: Install git and build essential
      become_user: root
      apt:
        name:
          - git 
          - build-essential
        state: present

    - name: Change hostname
      become_user: root
      hostname:
        name: "{{ system_hostname }}"

    - name: updating hostname {{ system_hostname }} 
      become_user: root
      ansible.builtin.copy:
        content: "{{ system_hostname }}{{'\n'}}"
        dest: /etc/hostname
        backup: true
      register: hostname_change

    - name: update /etc/hosts
      become_user: root
      ansible.builtin.lineinfile:
        dest: /etc/hosts
        regexp: '^127\.0\.0\.1'
        line: "127.0.0.1{{'\t'}}{{ system_hostname }}"
        backup: true
        state: present

    - name: Enable SSH
      become_user: root
      file:
        path: /boot/ssh
        state: touch

    - name: Disable "Please note that SSH may not work until a valid user has been set up." message
      become_user: root
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d/rename_user.conf
        state: absent

    - name: Add temporary password for root user
      become_user: root
      user:
        name: root
        password: "{{ 'letiretlebut' | password_hash('sha512') }}"

    - name: Add temporary password for pi user
      become_user: root
      user:
        name: pi
        password: "{{ 'scoreboard' | password_hash('sha512') }}"

    - name: Force isocpus=3 in cmdline.txt so matrix code runs smoother
      become_user: root
      ansible.builtin.shell: sed -i 's/$/ isolcpus=3/' /boot/cmdline.txt
      args:
        chdir: /boot/
    
    
    - name: Blacklist snd_bcm module (as per hzeller's instructions)
      become_user: root
      ansible.builtin.copy:
        dest: /etc/modprobe.d/blacklist-rgb-matrix.conf
        content: |
          blacklist snd_bcm2835
    
    - name: Download resize2fs_once binary
      become_user: root
      get_url:
        url: https://raw.githubusercontent.com/RPi-Distro/pi-gen/master/stage2/01-sys-tweaks/files/resize2fs_once
        dest: /etc/init.d/resize2fs_once
        mode: 0755

    - name: Force automatic rootfs expansion on first boot
      become_user: root
      systemd:
        service: resize2fs_once
        enabled: true

    - name: Copy global bash.bashrc
      become_user: root
      ansible.builtin.copy:
        src: ./files/sb_image/bash.bashrc
        dest: /etc/
        mode: "0644"

    - name: Copy scoreboard.bash to bashrc.d
      become_user: root
      ansible.builtin.copy:
        src: ./files/sb_image/scoreboard.bash
        dest: /etc/bashrc.d/
        mode: "0644"

    - name: Setup cron.scoreboard
      become_user: root
      ansible.builtin.copy:
        src: ./files/sb_image/get_version
        dest: /etc/cron.scoreboard
        mode: "0755"

    - name: Setup crontab to call cron.scoreboard on reboots
      become_user: root
      ansible.builtin.copy:
        src: ./files/sb_image/crontab
        dest: /etc/
        backup: true
        mode: preserve

    - name: Setup pi user crontab for daily check of version
      become_user: root
      ansible.builtin.cron:
        user: pi
        name: "Check scoreboard version"
        minute: 0
        hour: 3
        job: "/home/pi/sbtools/checkUpdate.sh > /home/pi/.nhlledportal/status"

    - name: Download zram-config
      become_user: root
      ansible.builtin.git:
        repo: https://github.com/ecdye/zram-config
        dest: /root/zram-config
        recursive: true        

    - name: Replace zram-config install.bash
      become_user: root
      ansible.builtin.copy:
        src: ./files/zram-config/install.bash
        dest: /root/zram-config/
        backup: true
        mode: "0755"

    - name: Install zram-config
      become_user: root
      ansible.builtin.command: /root/zram-config/install.bash
      args:
        chdir: /root/zram-config
    
    - name: Install ztab
      become_user: root
      ansible.builtin.copy:
        src: ./files/zram-config/ztab
        dest: /etc/
        mode: "0644"

   
    - name: Install aptfile (used for updates)
      become_user: root
      ansible.builtin.copy:
        src: ./files/sb_image/aptfile
        dest: /usr/local/bin
        mode: "0755"

    - name: Install scoreboard services
      become_user: root
      ansible.builtin.copy:
        src: "./files/sb_image/{{ item }}"
        dest: /etc/systemd/system
        mode: "0644"
      with_items:
        - sb_splash.service
        - sb_autosettz.service
        - supervisord.service

    - name: Enable scoreboard services
      become_user: root
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: true
        masked: no
      with_items:
        - sb_splash.service
        - sb_autosettz.service

    - name: Install OS packages needed for scoreboard
      become_user: root
      ansible.builtin.apt:
        name:
          - network-manager
          - python3-pip
          - python3-dev
          - python3-setuptools
          - python3-numpy
          - python3-pandas
          - python3-pil
          - python3-numpy
          - python3-pygame
          - python3-tk
          - python3-gpiozero
          - python3-virtualenv
          - libatlas-base-dev
          - neofetch
          - pastebinit
          - jq
          - neovim
          - zsh
          - libwebp-dev 
          - dbus
          - libsixel-bin
          - libgraphicsmagick++-q16-12
        state: present
      
    - name: Remove OS packages that will cause issues with scoreboard
      become_user: root
      apt:
        name:
        - bluez 
        - bluez-firmware 
        - pi-bluetooth 
        - triggerhappy
        clean: yes
        state: absent

    - name: Disable and mask services so we can use comitup for wifi setup
      become_user: root
      ansible.builtin.systemd:
        name: "{{ item }}"
        masked: true
      with_items:
        - dhcpcd
        - dnsmasq
        - systemd-resolved
        - dhcpd
        - wpa-supplicant
        
    - name: Enable NetworkManager service
      become_user: root
      ansible.builtin.systemd:
        name: NetworkManager
        enabled: true
        masked: false
   
    - name: Delete network inetrfaces file 
      become_user: root
      ansible.builtin.file:
        path: /etc/network/interface
        state: absent

    - name: Install comitup deb package from the internet
      become_user: root
      ansible.builtin.apt:
        deb: https://davesteele.github.io/comitup/latest/davesteele-comitup-apt-source_latest.deb
        dpkg_options: "force-all"
   
    - name: Install comitup and comitup-web packages
      become_user: root
      ansible.builtin.apt:
        update_cache: yes
        name: "{{ item }}"
      with_items:
        - comitup
        - comitup-watch

    - name: Copy scoreboard comitup.conf file
      become_user: root
      ansible.builtin.copy:
        src: ./files/comitup-conf/comitup.conf
        dest: /etc/
        backup: true
        
    - name: Extract scoreboard template into the comitup flask template directory
      become_user: root
      ansible.builtin.unarchive:
        src: ./files/comitup-conf/scoreboard_ui.tar.gz
        dest: /usr/share/comitup/web/templates

    - name: Update template path variable in comitupweb.py to use scoreboard template
      become_user: root
      ansible.builtin.lineinfile:
        path: /usr/share/comitup/web/comitupweb.py
        regexp: '^TEMPLATE_PATH ='
        line: TEMPLATE_PATH = "/usr/share/comitup/web/templates/scoreboard"

    - name: Copy sbtools directory
      ansible.builtin.copy:
        src: ./files/sb_image/sbtools
        dest: ~/
        mode: preserve

    - name: Create .config/neofetch directory in pi home
      ansible.builtin.file:
        path: ~/.config/neofetch
        state: directory
        mode: "0755"


    - name: Copy scoreboard neofetch config
      ansible.builtin.copy:
        src: ./files/sb_image/.config/neofetch/neofetch_config.conf
        dest: ~/.config/neofetch/config.conf
        mode: "0755"
 
    - name: Create .nhlledportal directory
      ansible.builtin.file:
        path: ~/.nhlledportal
        state: directory
        mode: "0755"

    - name: Create startup files in .nhlledportal
      ansible.builtin.file:
        path: "~/.nhlledportal/{{ item }}"
        state: touch
        mode: "0755"
      with_items:
       - setTZ
       - SETUP
    
    - name: Setup pi user bash and gitconfig
      ansible.builtin.copy:
        src: "./files/sb_image/{{ item }}"
        dest: ~/
        mode: "0644"
      with_items:
        - .gitconfig
        - .bashrc

    - name: Download scoreboard release repo "{{ gh_repo }}"
      ansible.builtin.git:
        repo: "{{ gh_repo }}"
        dest: ~/nhl-led-scoreboard
        recursive: true
        depth: 1
        track_submodules: true
      when: not use_beta

    - name: Download scoreboard beta repo "{{ gh_repo }}"
      ansible.builtin.git:
        repo: "{{ gh_repo }}"
        dest: ~/nhl-led-scoreboard
        recursive: true
        depth: 1
        track_submodules: true
        version: "{{gh_branch}}"
      when: use_beta

    - name: Copy rgb matrix install_bindings.sh
      become_user: root
      ansible.builtin.copy:
        src: ./files/sb_image/install_bindings.sh
        dest: /home/pi/nhl-led-scoreboard
        mode: "0755"

    - name: Install rgb matrix python bindings
      become_user: root
      ansible.builtin.command: /home/pi/nhl-led-scoreboard/install_bindings.sh
      args:
        chdir: /home/pi/nhl-led-scoreboard

    - name: Remove install_bindings.sh  
      become_user: root
      ansible.builtin.file:
        path: /home/pi/nhl-led-scoreboard/install_bindings.sh
        state: absent
        
    - name: Install extra python packages for scoreboard
      become_user: root
      ansible.builtin.pip:
        extra_args: "{{ pypi_proxy }}"
        name:
          - archey4
          - tzlocal
          - cairosvg
          - lastversion
      
    - name: Install required python packages for scoreboard
      ansible.builtin.pip:
        virtualenv: /home/pi/nhl-led-scoreboard/venv
        virtualenv_python: python3   
        virtualenv_site_packages: true 
        extra_args: "{{ pypi_proxy }}"
        requirements: /home/pi/nhl-led-scoreboard/requirements.txt

    - name: Update .nhlledportal/status file
      ansible.builtin.shell: /home/pi/sbtools/checkUpdate.sh > /home/pi/.nhlledportal/status
      args:
        chdir: /home/pi/sbtools

    - name: Remove 51cache file (delete file)
      become_user: root
      ansible.builtin.file:
        path: /etc/apt/apt.conf.d/51cache
        state: absent
      when: use_apt_proxy